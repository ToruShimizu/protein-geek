
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE "public"."makers" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"(),
    "name" "text" NOT NULL,
    "protein_id" bigint
);

ALTER TABLE "public"."makers" OWNER TO "postgres";

ALTER TABLE "public"."makers" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."maker_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE "public"."proteins" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"(),
    "flavor" "text" DEFAULT ''::"text" NOT NULL,
    "price" "text" DEFAULT ''::"text" NOT NULL,
    "capacity" "text" DEFAULT ''::"text" NOT NULL,
    "src" "text" DEFAULT ''::"text" NOT NULL,
    "review_id" bigint,
    "name" "text" DEFAULT ''::"text" NOT NULL,
    "maker_id" bigint NOT NULL
);

ALTER TABLE "public"."proteins" OWNER TO "postgres";

ALTER TABLE "public"."proteins" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."protein_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE "public"."reviews" (
    "id" bigint NOT NULL,
    "rate" numeric NOT NULL,
    "name" "text" DEFAULT ''::"text" NOT NULL,
    "description" "text" DEFAULT ''::"text" NOT NULL,
    "title" "text" DEFAULT ''::"text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"()
);

ALTER TABLE "public"."reviews" OWNER TO "postgres";

ALTER TABLE "public"."reviews" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."review_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."makers"
    ADD CONSTRAINT "maker_pkey" PRIMARY KEY ("id", "name");

ALTER TABLE ONLY "public"."proteins"
    ADD CONSTRAINT "proteins_pkey" PRIMARY KEY ("id", "flavor", "price", "capacity", "src", "name", "maker_id");

ALTER TABLE ONLY "public"."reviews"
    ADD CONSTRAINT "reviews_pkey" PRIMARY KEY ("id", "rate", "name", "description", "title");

CREATE POLICY "Enable read access for all users" ON "public"."makers" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."proteins" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."reviews" FOR SELECT USING (true);

ALTER TABLE "public"."makers" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."proteins" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."reviews" ENABLE ROW LEVEL SECURITY;

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."makers" TO "anon";
GRANT ALL ON TABLE "public"."makers" TO "authenticated";
GRANT ALL ON TABLE "public"."makers" TO "service_role";

GRANT ALL ON SEQUENCE "public"."maker_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."maker_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."maker_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."proteins" TO "anon";
GRANT ALL ON TABLE "public"."proteins" TO "authenticated";
GRANT ALL ON TABLE "public"."proteins" TO "service_role";

GRANT ALL ON SEQUENCE "public"."protein_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."protein_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."protein_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."reviews" TO "anon";
GRANT ALL ON TABLE "public"."reviews" TO "authenticated";
GRANT ALL ON TABLE "public"."reviews" TO "service_role";

GRANT ALL ON SEQUENCE "public"."review_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."review_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."review_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
